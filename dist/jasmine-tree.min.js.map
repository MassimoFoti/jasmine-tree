{"version":3,"sources":["jasmine-tree.min.js","jasmine-tree.js"],"names":["jasmineTree","version","CONST","CSS_CLASSES","SUMMARY","TRIGGER","TOOLBAR","BUTTON","NODE_OPENED","SELECTORS","FIRST_CHILD","ROOT_SUITE","NODE_TITLE","NODE_SPECS","NODE_SUITES","TEXT","COLLAPSE","EXPAND","SEPARATOR","PLUS","MINUS","FILTER_REGEXP","RegExp","rootSuites","getSpecFilter","match","exec","window","location","search","decodeURIComponent","replace","collapseAll","i","length","collapse","expandAll","expand","addRootClass","jQuery","addClass","addToolbar","toolbar","text","append","separator","click","event","preventDefault","insertBefore","filterSpec","filter","containsPath","Suite","options","config","rootNode","rootPath","extend","self","this","suites","specs","fullPath","expanded","triggerNode","init","titleNode","find","each","index","item","push","childSuite","attachEvents","startsWith","str","subStr","substring","getPath","path","j","specPath","show","hide","removeClass","suite","jasmine","getEnv","addReporter","jasmineDone"],"mappings":"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","file":"jasmine-tree.min.js","sourcesContent":[null,"if(typeof(jQuery) === \"undefined\"){\r\n\tthrow(\"Unable to find jQuery\");\r\n}\r\n\r\nif(typeof(jasmineTree) === \"undefined\"){\r\n\tvar jasmineTree = {};\r\n}\r\n\r\n(function(){\r\n\t\"use strict\";\r\n\r\n\tjasmineTree.version = \"0.1.1\";\r\n\r\n\tvar CONST = {\r\n\t\tCSS_CLASSES: {\r\n\t\t\tSUMMARY: \"jasmine-tree-summary\",\r\n\t\t\tTRIGGER: \"jasmine-tree-trigger\",\r\n\t\t\tTOOLBAR: \"jasmine-tree-toolbar\",\r\n\t\t\tBUTTON: \"jasmine-tree-button\",\r\n\t\t\tNODE_OPENED: \"jasmine-tree-opennode\"\r\n\t\t},\r\n\t\tSELECTORS: {\r\n\t\t\tFIRST_CHILD: \":first-child\",\r\n\t\t\tSUMMARY: \".summary\",\r\n\t\t\tROOT_SUITE: \".summary > .suite\",\r\n\t\t\tNODE_TITLE: \"> li.suite-detail\",\r\n\t\t\tNODE_SPECS: \"> ul.specs\",\r\n\t\t\tNODE_SUITES: \"> ul.suite\"\r\n\t\t},\r\n\t\tTEXT: {\r\n\t\t\tCOLLAPSE: \"Collapse All\",\r\n\t\t\tEXPAND: \"Expand All\",\r\n\t\t\tSEPARATOR: \" | \",\r\n\t\t\tPLUS: \"+\",\r\n\t\t\tMINUS: \"-\"\r\n\t\t},\r\n\t\tFILTER_REGEXP: (new RegExp(\"[?&]spec=([^&]*)\"))\r\n\t};\r\n\r\n\t/** @type {array.<jasmineTree.Suite>} */\r\n\tvar rootSuites = [];\r\n\r\n\t/**\r\n\t * Returns the value of the \"spec\" parameter in the querystring. Null if it's not specified\r\n\t * @returns {null|string}\r\n\t */\r\n\tjasmineTree.getSpecFilter = function(){\r\n\t\tvar match = CONST.FILTER_REGEXP.exec(window.location.search);\r\n\t\treturn match && decodeURIComponent(match[1].replace(/\\+/g, \" \"));\r\n\t};\r\n\r\n\t/**\r\n\t * Collapse all the suites\r\n\t */\r\n\tjasmineTree.collapseAll = function(){\r\n\t\tfor(var i = 0; i < rootSuites.length; i++){\r\n\t\t\trootSuites[i].collapse();\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Expand all the suites\r\n\t */\r\n\tjasmineTree.expandAll = function(){\r\n\t\tfor(var i = 0; i < rootSuites.length; i++){\r\n\t\t\trootSuites[i].expand();\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Add a CSS class to the summary to enable more specific CSS selectors\r\n\t */\r\n\tjasmineTree.addRootClass = function(){\r\n\t\tjQuery(CONST.SELECTORS.SUMMARY).addClass(CONST.CSS_CLASSES.SUMMARY);\r\n\t};\r\n\r\n\t/**\r\n\t * Insert toolbar with expand/collapse all buttons\r\n\t * @param {array.<jasmineTree.Suite>} rootSuites\r\n\t */\r\n\tjasmineTree.addToolbar = function(rootSuites){\r\n\r\n\t\tvar toolbar = jQuery(\"<div></div>\").addClass(CONST.CSS_CLASSES.TOOLBAR);\r\n\t\tvar collapse = jQuery(\"<span></span>\").addClass(CONST.CSS_CLASSES.BUTTON).text(CONST.TEXT.COLLAPSE);\r\n\t\ttoolbar.append(collapse);\r\n\t\tvar separator = jQuery(\"<span></span>\").text(CONST.TEXT.SEPARATOR);\r\n\t\ttoolbar.append(separator);\r\n\t\tvar expand = jQuery(\"<span></span>\").addClass(CONST.CSS_CLASSES.BUTTON).text(CONST.TEXT.EXPAND);\r\n\t\ttoolbar.append(expand);\r\n\r\n\t\tcollapse.click(function(event){\r\n\t\t\tevent.preventDefault();\r\n\t\t\tjasmineTree.collapseAll();\r\n\t\t});\r\n\r\n\t\texpand.click(function(event){\r\n\t\t\tevent.preventDefault();\r\n\t\t\tjasmineTree.expandAll();\r\n\t\t});\r\n\r\n\t\ttoolbar.insertBefore(jQuery(CONST.SELECTORS.SUMMARY));\r\n\t};\r\n\r\n\t/**\r\n\t * Check the querystring and expand/collapse suites based on filter criteria (if any)\r\n\t */\r\n\tjasmineTree.filterSpec = function(){\r\n\t\tvar filter = jasmineTree.getSpecFilter();\r\n\t\tif(filter === null){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// We have a filter. First collapse all\r\n\t\tjasmineTree.collapseAll();\r\n\t\t// Then expand only the suites that match\r\n\t\tfor(var i = 0; i < rootSuites.length; i++){\r\n\t\t\tif(rootSuites[i].containsPath(filter) === true){\r\n\t\t\t\trootSuites[i].expand();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Wrapper around a suite's HTML node. Adds expand/collapse capabilities\r\n\t * @param {jquery} options.rootNode\r\n\t * @constructor\r\n\t */\r\n\tjasmineTree.Suite = function(options){\r\n\t\tvar config = {\r\n\t\t\trootNode: null,\r\n\t\t\trootPath: \"\"\r\n\t\t};\r\n\t\tjQuery.extend(config, options);\r\n\r\n\t\t/** @type  {jasmineTree.Suite} */\r\n\t\tvar self = this;\r\n\r\n\t\t/** @type {array.<jasmineTree.Suite>} */\r\n\t\tvar suites = [];\r\n\t\t/** @type {array.<jquery>} */\r\n\t\tvar specs = [];\r\n\r\n\t\tvar fullPath = \"\";\r\n\t\tvar expanded = true;\r\n\t\tvar triggerNode = jQuery(\"<a></a>\").text(CONST.TEXT.MINUS).addClass(CONST.CSS_CLASSES.TRIGGER);\r\n\r\n\t\tvar init = function(){\r\n\t\t\tconfig.rootNode.addClass(CONST.CSS_CLASSES.NODE_OPENED);\r\n\r\n\t\t\tvar titleNode = config.rootNode.find(CONST.SELECTORS.NODE_TITLE);\r\n\r\n\t\t\tfullPath = config.rootPath + titleNode.text();\r\n\t\t\ttriggerNode.insertBefore(titleNode.find(CONST.SELECTORS.FIRST_CHILD));\r\n\r\n\t\t\tconfig.rootNode.find(CONST.SELECTORS.NODE_SPECS).each(function(index, item){\r\n\t\t\t\tspecs.push(jQuery(item));\r\n\t\t\t});\r\n\t\t\tconfig.rootNode.find(CONST.SELECTORS.NODE_SUITES).each(function(index, item){\r\n\t\t\t\tvar childSuite = new jasmineTree.Suite({\r\n\t\t\t\t\trootNode: jQuery(item),\r\n\t\t\t\t\trootPath: fullPath + \" \"\r\n\t\t\t\t});\r\n\t\t\t\tsuites.push(childSuite);\r\n\t\t\t});\r\n\t\t\tattachEvents();\r\n\t\t};\r\n\r\n\t\tvar attachEvents = function(){\r\n\t\t\ttriggerNode.click(function(event){\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tif(expanded === true){\r\n\t\t\t\t\tself.collapse();\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tself.expand();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tvar startsWith = function(str, subStr) {\r\n\t\t\treturn (str.substring(0, subStr.length) === subStr);\r\n\t\t};\r\n\r\n\t\tthis.getPath = function(){\r\n\t\t\treturn fullPath;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Given a filter string, coming from the querystring, search if the suite contains specs that match it\r\n\t\t * @param {string} path\r\n\t\t * @returns {boolean}\r\n\t\t */\r\n\t\tthis.containsPath = function(path){\r\n\t\t\t// Matches the suite\r\n\t\t\tif(startsWith(self.getPath(), path) === true){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\t// Search inside child specs\r\n\t\t\tfor(var j = 0; j < specs.length; j++){\r\n\t\t\t\tvar specPath = self.getPath() + \" \" + specs[j].text();\r\n\t\t\t\tif(specPath === path){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Search inside child suites\r\n\t\t\tfor(var i = 0; i < suites.length; i++){\r\n\t\t\t\tif(suites[i].containsPath(path) === true){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tthis.show = function(){\r\n\t\t\tconfig.rootNode.show();\r\n\t\t};\r\n\r\n\t\tthis.hide = function(){\r\n\t\t\tconfig.rootNode.hide();\r\n\t\t};\r\n\r\n\t\tthis.collapse = function(){\r\n\t\t\tconfig.rootNode.removeClass(CONST.CSS_CLASSES.NODE_OPENED);\r\n\t\t\ttriggerNode.text(CONST.TEXT.PLUS);\r\n\t\t\tfor(var i = 0; i < suites.length; i++){\r\n\t\t\t\tsuites[i].collapse();\r\n\t\t\t\tsuites[i].hide();\r\n\t\t\t}\r\n\t\t\tfor(var j = 0; j < specs.length; j++){\r\n\t\t\t\tspecs[j].hide();\r\n\t\t\t}\r\n\t\t\texpanded = false;\r\n\t\t};\r\n\r\n\t\tthis.expand = function(){\r\n\t\t\tconfig.rootNode.addClass(CONST.CSS_CLASSES.NODE_OPENED);\r\n\t\t\ttriggerNode.text(CONST.TEXT.MINUS);\r\n\t\t\tfor(var i = 0; i < suites.length; i++){\r\n\t\t\t\tsuites[i].expand();\r\n\t\t\t\tsuites[i].show();\r\n\t\t\t}\r\n\t\t\tfor(var j = 0; j < specs.length; j++){\r\n\t\t\t\tspecs[j].show();\r\n\t\t\t}\r\n\t\t\texpanded = true;\r\n\t\t};\r\n\r\n\t\tinit();\r\n\t};\r\n\r\n\t/**\r\n\t * This must be invoked after Jasmine finished executing\r\n\t */\r\n\tjasmineTree.init = function(){\r\n\t\tjQuery(CONST.SELECTORS.ROOT_SUITE).each(function(index, item){\r\n\t\t\tvar suite = new jasmineTree.Suite({\r\n\t\t\t\t\trootNode: jQuery(item)\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\trootSuites.push(suite);\r\n\t\t});\r\n\t\tjasmineTree.addRootClass();\r\n\t\tjasmineTree.addToolbar();\r\n\t\tjasmineTree.filterSpec();\r\n\t};\r\n\r\n\tjasmine.getEnv().addReporter({\r\n\t\tjasmineDone: function(){\r\n\t\t\tjasmineTree.init();\r\n\t\t}\r\n\t});\r\n\r\n}());"],"sourceRoot":"."}